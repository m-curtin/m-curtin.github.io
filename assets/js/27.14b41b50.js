(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{388:function(t,s,a){"use strict";a.r(s);var r=a(25),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"chrome架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome架构"}},[t._v("#")]),t._v(" Chrome架构")]),t._v(" "),a("h3",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("blockquote",[a("p",[t._v("学习浏览器的多进程架构非常有必要，Chrome、Edge及国内大部分主流浏览器都是基于 Chromium 二次开发得来；Chrome 是 Google的官方发行版，特性与 Chromium 基本一样，只存在产品差异。Chrome 是目前世界上使用率最高的浏览器，Chrome 最具代表性。")])]),t._v(" "),a("h2",{attrs:{id:"进程线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程线程"}},[t._v("#")]),t._v(" 进程线程")]),t._v(" "),a("p",[t._v("进程和线程是非常重要的一个东西，当然我们先理解一下什么是并行处理，这样我们再理解进程和线程之间的关系就轻松很多。")]),t._v(" "),a("h3",{attrs:{id:"并行处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并行处理"}},[t._v("#")]),t._v(" 并行处理")]),t._v(" "),a("p",[t._v("计算机中的并行处理就是同一时刻处理多个任务，比如我们要计算下面这三个表达式的值，并显示出结果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),a("p",[t._v("写代码的时候，我们可以把这个过程拆分为四个任务:")]),t._v(" "),a("ul",[a("li",[t._v("任务 1 是计算 A=1+2;")]),t._v(" "),a("li",[t._v("任务 2 是计算 B=20/5;")]),t._v(" "),a("li",[t._v("任务 3 是计算 C=7*8;")]),t._v(" "),a("li",[t._v("任务 4 是显示最后计算的结果")])]),t._v(" "),a("p",[a("code",[t._v("单线程")]),t._v("处理：分四步执行。\n"),a("code",[t._v("多线程")]),t._v("处理：两步，用三个线程先执行前三步，再执行第四步。")]),t._v(" "),a("blockquote",[a("p",[t._v("所以，使用并行处理可以大大提高性能。")])]),t._v(" "),a("h3",{attrs:{id:"线程vs进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程vs进程"}},[t._v("#")]),t._v(" 线程VS进程")]),t._v(" "),a("p",[t._v("多线程可以并行处理任务。")]),t._v(" "),a("p",[t._v("线程不能单独存在，由进程来启动和管理。")]),t._v(" "),a("p",[t._v("启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的 一个运行环境叫进程。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://imgchr.com/i/Dg8mB6",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://s3.ax1x.com/2020/11/29/Dg8mB6.png",alt:"Dg8mB6.png"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("线程是依附于进程的，进程中使用多线程并行处理能提升运算效率。")]),t._v(" "),a("p",[t._v("进程和线程之间的关系有四个特点：")]),t._v(" "),a("ol",[a("li",[t._v("进程中任意线程出错，会导致整个进程崩溃。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);